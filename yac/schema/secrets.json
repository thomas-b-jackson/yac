{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "Secrets",
  "description": "yac-based secrets",
  "type": "object",
  "$id": "secrets",
  "patternProperties": {
    "(\\S)": {
      "$id": "/properties/secrets/properties/param-key",
      "type": "object",
      "title": "Secret Key",
      "description": "The secret key, referenced via intrinsics and templates",
      "required": [ "source", "lookup", "comment"],
      "properties": {
        "comment": {
          "$id": "/properties/secrets/properties/param-key/properties/comment",
          "type": ["string","array"],
          "title": "Secret Source",
          "description": "An explanation about the parameter represented by the secret.",
          "default": "",
          "examples": [
            "The password for the db user",
            ["The password for the db user","TODO: create a policy to rotate this..."]
          ]
        },
        "source": {
          "$id": "/properties/secrets/properties/param-key/properties/source",
          "type": "string",
          "title": "Secret Source",
          "description": "The key of a vault in SecretSources",
          "default": "",
          "examples": [
            "gitlab-s3"
          ]
        },
        "lookup": {
          "$id": "/properties/secrets/properties/param-key/properties/lookup",
          "type": ["string","object"],
          "title": "Secret Lookup",
          "description": "A string or object that the vault can use to find the secret",
          "default": "",
          "examples": [
            "my_app.db_pwd.dev",{"yac-join": [".",["my_app.db_pwd",
                                {"yac-ref": "env"}]]}
          ]
        }
      }
    }
  }
}
